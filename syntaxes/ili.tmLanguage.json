{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "ili",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#variables"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#constants"
		},
		{
			"include": "#markups"
		}
	],
		"repository": {
			"keywords": {
				"patterns": [
					{
					"name": "keyword.model.ili",
					"match": "(\\b(MODEL))|(\\b(END))"
					},
					{
					"name": "keyword.topic.ili",
					"match": "(\\b(TOPIC))|(\\b(END))"
					},
					{
					"name": "keyword.class.ili",
					"match": "(\\b(CLASS))|(\\b(END))"
					},					
					{
					"name": "keyword.association.ili",
					"match": "(\\b(ASSOCIATION))|(\\b(END))"
					},					
					{
					"name": "keyword.structure.ili",
					"match": "(\\b(STRUCTURE))|(\\b(END))"
					},					
					{
					"name": "keyword.constraint.ili",
					"match": "(\\b(CONSTRAINT))|(\\b(END))"
					},
					{
						"name": "keyword.view.ili",
						"match": "(\\b(VIEW))|(\\b(END))"
						},				
					{
					"name": "keyword.language.ili",
					"match": "(\\b(INTERLIS 2.4;))"
					}						
				]
				},
		"comments": {
					"patterns": [
						{
						"name": "comment.line.double-dash.ili",
						"begin": "!!",
						"end": "\n"
		
						}
					]
				},
		"strings":{
			"patterns": [
				{
				"name":"string.quoted.single.ili",
				"begin": "{",
				"end": "}"
				},
				{
					"name":"string.paranth.single.ili",
					"begin": "\\(",
					"end": "\\)"
				}
			]
		},
		"markups": {
			"patterns": [
				{
				"name": "constant.character.ili",
				"match": "(;|=|:)"
				},
				{
					"name": "constant.association.ili",
					"match": "(\\?<![\\w\\d])--<#>(?![\\w\\d])"
				},
				{
					"name": "constant.composition.ili",
					"match": "(\\?<![\\w\\d])--<>(?![\\w\\d])"
				},
				{
					"name": "constant.aggregation.ili",
					"match": "(--)"
				},
				{
				"name": "constant.language.ili",
				"match": "(INTERLIS|VERSION|UNQUALIFIED|MANDATORY|(LOCAL)|LIST|DIRECTED|BAG|ORDERED|EXISTENCE|ATTRIBUTE|AGGREGATES|IMPORTS|POLYLINE|MULTIPOLYLINE|WITHOUT|WITH|SET|UNION|AGGREGATION|REFSYSTEM|EQUAL|DEFINED|CONSTRAINT|CIRCULAR|FINAL|DOMAIN|OF|REQUIRED|WHERE|EXTENDS|JOIN|AND|(EXTENDED)|\\(EXTERNAL\\)|(ABSTRACT)|UNIQUE|AT|TEXT|INT|REFERENCE|TO|IN|FINAL|BASKET|OBJECTS|ROTATION|SURFACE|VERTEX|AREA|AS|CONTEXT|DEPENDS|ON)"
				},
				{
				"name": "constant.numeric",
				"match": "[0-9]"
				}
			]
		},
		"variables": {
			"patterns": [
				{
				"name": "variable.boolean.ili",
				"match": "(BOOLEAN)"
				},
				{
				"name": "variable.text.ili",
				"match": "(TEXT)"
				},
				{
				"name": "variable.geom.ili",
				"match": "(OVERLAPS)"
				},
				{
				"name": "variable.int.ili",
				"match": "(\\?<![\\w\\d])INT(?![\\w\\d])"
				}
			]
		}
	},
	"scopeName": "source.ili"
}